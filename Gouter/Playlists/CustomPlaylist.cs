using System.Collections.Generic;
using System.Linq;
using System.Windows.Data;
using Gouter.MediaPlayer;

namespace Gouter.Playlists;

/// <summary>
/// プレイリスト情報
/// </summary>
internal class CustomPlaylist : IPlaylist
{
    /// <summary>
    /// 自動生成フラグ
    /// </summary>
    public bool IsAutoGenerated { get; } = false;

    /// <summary>
    /// プレイリストID
    /// </summary>
    public int Id { get; init; }

    /// <summary>
    /// プレイリスト名
    /// </summary>
    public string Name { get; init; }

    /// <summary>
    /// プレイリスト詳細情報
    /// </summary>
    public PlaylistInfo Playlist { get; init; }

    /// <summary>
    /// トラック一覧
    /// </summary>
    public ObservableList<PlaylistTrackInfo> Tracks { get; init; }

    /// <summary>
    /// トラック一覧(実装)
    /// </summary>
    IList<TrackInfo> IPlaylist.Tracks => this.Tracks.OfType<TrackInfo>().ToList();

    /// <summary>
    /// プレイリスト情報を生成する
    /// </summary>
    /// <param name="playlistInfo">プレイリスト詳細情報</param>
    public CustomPlaylist(PlaylistInfo playlistInfo)
    {
        this.Playlist = playlistInfo;
        this.Name = playlistInfo.Name;

        this.Tracks = new ObservableList<PlaylistTrackInfo>();

        BindingOperations.EnableCollectionSynchronization(this.Tracks, new object());
    }

    /// <summary>
    /// プレイリスト情報を生成する
    /// </summary>
    /// <param name="playlistInfo">プレイリスト詳細情報</param>
    /// <param name="tracks">トラック情報リスト</param>
    public CustomPlaylist(PlaylistInfo playlistInfo, IEnumerable<PlaylistTrackInfo> tracks)
    {
        this.Playlist = playlistInfo;
        this.Name = playlistInfo.Name;

        this.Tracks = new ObservableList<PlaylistTrackInfo>(tracks);

        BindingOperations.EnableCollectionSynchronization(this.Tracks, new object());
    }
}
